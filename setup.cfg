[metadata]
name = enerflow
author = enerflow Developers
author_email = enerflow@enerflow.org
license = Apache
description = An open source library for energy and weather forecasting
long_description_content_type=text/x-rst
long_description =
    # EnerFlow

    ## Introduction
    `enerflow`, is an open source library for energy and weather forecasting which makes use of gradient boosting decision trees. It considers the forecasting problem as a tabular problem without the  spatio-temporal aspects included in the modeling prior. Instead spatio-temporal features can be included as (lagged) features in the tabular data. The code integrates the following popular gradient boosting implementations:

    ##### 1) `lightgbm` ([Documentation](https://lightgbm.readthedocs.io/en/latest/), [Paper](https://papers.nips.cc/paper/6907-lightgbm-a-highly-efficient-gradient-boosting-decision-tree.pdf))
    ##### 2) `xgboost` ([Documentation](https://xgboost.readthedocs.io/en/stable/), [Paper](https://arxiv.org/pdf/1603.02754.pdf))
    ##### 3) `catboost` ([Documentation](https://catboost.ai/en/docs/), [Paper](https://arxiv.org/pdf/1706.09516.pdf))

url = https://github.com/enerflow/enerflow
classifiers =
    Development Status :: 3 - Alpha
    License :: OSI Approved :: Apache Software License
    Operating System :: OS Independent
    Intended Audience :: Science/Research
    Programming Language :: Python
    Topic :: Scientific/Engineering

[options]
packages = find:
zip_safe = False  # https://mypy.readthedocs.io/en/latest/installed_packages.html
include_package_data = True
python_requires = >=3.7
install_requires =
    catboost >= 0.24
    cmake >= 3.18
    joblib >= 1.0
    jupyter >= 1.0
    lightgbm >= 3.1
    matplotlib >= 3.3
    numpy >= 1.19
    pandas >= 1.1
    scikit-learn >= 1.0
    shap >= 0.37
    statsmodels >= 0.12
    tqdm >= 4.54
    xgboost >= 1.3
    setuptools >= 38.4
setup_requires =
    setuptools >= 38.4
    setuptools_scm

[options.extras_require]

[tool:pytest]
python_files = test_*.py
testpaths = enerflow_forecast/tests properties

[flake8]
ignore =
exclude=
    .eggs
    doc

[aliases]
test = pytest

[pytest-watch]
nobeep = True
